services:
  - name: proxy
    type: web
    env: docker
    plan: free
    dockerImage: traefik:v2.9
    dockerCommand:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--accesslog"
      - "--log"
      - "--api"
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
    volumes:
      - path: /var/run/docker.sock
        mountPath: /var/run/docker.sock
        readOnly: true
    envVars:
      - key: TRAEFIK_PUBLIC_NETWORK
        value: ${TRAEFIK_PUBLIC_NETWORK}
    labels:
      - key: traefik.enable
        value: "true"
      - key: traefik.docker.network
        value: ${TRAEFIK_PUBLIC_NETWORK}

  - name: db
    type: worker
    env: docker
    plan: free
    dockerImage: mongo:latest
    volumes:
      - path: /data/db
        mountPath: /data/db
    envVars:
      - key: MONGO_INITDB_DATABASE
        value: ${MONGO_DB}
      - key: MONGO_INITDB_ROOT_USERNAME
        value: ${MONGO_USER}
      - key: MONGO_INITDB_ROOT_PASSWORD
        value: ${MONGO_PASSWORD}

  - name: backend
    type: web
    env: docker
    plan: free
    dockerfilePath: ./backend/Dockerfile
    buildCommand: docker build -t ${DOCKER_IMAGE_BACKEND}:${TAG} ./backend
    startCommand: /start-reload.sh
    dependsOn:
      - name: db
    volumes:
      - path: ./backend
        mountPath: /app
    envVars:
      - key: SERVER_HOST
        value: http://${DOMAIN}
    labels:
      - key: traefik.enable
        value: "true"
      - key: traefik.http.routers.${STACK_NAME}-backend-http.rule
        value: "PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)"
      - key: traefik.http.services.${STACK_NAME}-backend.loadbalancer.server.port
        value: "80"

  - name: frontend
    type: web
    env: docker
    plan: free
    dockerfilePath: ./frontend/Dockerfile.development
    buildCommand: docker build -t ${DOCKER_IMAGE_FRONTEND}:${TAG} ./frontend
    startCommand: npm run dev -- --host
    volumes:
      - path: ./frontend
        mountPath: /app
      - path: /app/node_modules
        mountPath: /app/node_modules
    labels:
      - key: traefik.enable
        value: "true"
      - key: traefik.http.routers.${STACK_NAME}-frontend-http.rule
        value: "PathPrefix(`/`)"
      - key: traefik.http.services.${STACK_NAME}-frontend.loadbalancer.server.port
        value: "5173"

volumes:
  - name: app-db-data
