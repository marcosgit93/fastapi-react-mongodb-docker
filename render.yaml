version: '3'

services:
  proxy:
    image: traefik:v2.9
    networks:
      - traefik-public
      - default
    ports:
      - "80:80"
      - "8090:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --accesslog
      - --log
      - --api
      - --api.insecure=true
      - --entrypoints.web.address=:80
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public

  db:
    image: mongo:latest
    volumes:
      - app-db-data:/data/db
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}

  backend:
    image: ${DOCKER_IMAGE_BACKEND}:${TAG-latest}
    depends_on:
      - db
    volumes:
      - ./backend:/app
    ports:
      - "8888:8888"
    environment:
      - SERVER_HOST=http://${DOMAIN}
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV}
    command: /start-reload.sh
    labels:
      - traefik.enable=true
      - traefik.http.routers.${STACK_NAME}-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
      - traefik.http.services.${STACK_NAME}-backend.loadbalancer.server.port=80

  frontend:
    image: ${DOCKER_IMAGE_FRONTEND}:${TAG-latest}
    build:
      context: ./frontend
      dockerfile: Dockerfile.development
      args:
        FRONTEND_ENV: dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - .env
    command: npm run dev -- --host
    labels:
      - traefik.enable=true
      - traefik.http.routers.${STACK_NAME}-frontend-http.rule=PathPrefix(`/`)
      - traefik.http.services.${STACK_NAME}-frontend.loadbalancer.server.port=5173

volumes:
  app-db-data:

networks:
  traefik-public:
    external: false
